#!/bin/bash

# Exit immediately on error.
set -e

# Echo commands to stdout.
set -x

# Treat undefined variables as errors.
set -u

cd tests/

cp "Dockerfile-${distro}" Dockerfile

# Build container
container_tag=${distro}
docker build \
  --rm=true \
  --tag=${container_tag} .

# Run container in detached state
id_file=$(mktemp)
docker run \
  --detach \
  --volume="${PWD}":/etc/ansible/roles/role_under_test:ro \
  ${container_tag} ${init} > "${id_file}"
container_id="$(cat $id_file)"
echo "Container ID:" "${container_id}"

printf "${container_id} ansible_connection=docker\n" > hosts

# Print ansible version.
ansible --version

# Create a symlink to the role under test (removing previous if it existed)
mkdir -p roles
rm roles/role_under_test || true
ln -s ../../ roles/role_under_test

# Ansible syntax check.
ansible-playbook --inventory hosts test.yml --syntax-check

# Check that role installs successfully.
ansible-playbook --inventory hosts test.yml

# Check role for linter errors.
ansible-lint test.yml -t role_under_test

# Clean up
docker stop "${container_id}"
docker rm "${container_id}"
rm Dockerfile
